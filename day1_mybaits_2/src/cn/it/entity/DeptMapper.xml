<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.it.entity.DeptMapper">
<!--resultMap用于查询，可以把查询后字段值封装到对应类的属性， type指定的是对应的实体类 -->
<resultMap type="Dept" id="deptResultMap">
<!-- id用来配置表的主键与类的属性的映射关系 ,column指定的是表的字段名； property指定的是类的属性名-->
<id column="dept_id" property="deptId"/>
<!-- result用来配置 普通字段与类的属性的映射关系 ,column指定的是表的字段名； property指定的是类的属性名-->
<result column="dept_name" property="deptName"/>
<result column="dept_address" property="deptAddress"/>
</resultMap>
<!-- 添加一第记录 ; 定义插入的sql语句，通过命名空间+id方式被定位 -->
<insert id="insertDept" parameterType="Dept">
<!-- #{} 用来获取传过来的参数 -->
	insert into dept(dept_name,dept_address) values(#{deptName},#{deptAddress})
</insert>
<!-- 根据部门编号修改部门信息 -->
<update id="updateDept" parameterType="dept">
	update dept set dept_name=#{deptName},dept_address=#{deptAddress} 
	where dept_id = #{deptId}
</update>

<!--根据部门编号删除部门  -->
<delete id="deleteDept" parameterType="integer" >
	delete from dept where dept_id = #{deptId}
</delete>

<!-- 查询单个部门信息 -->
<select id="selectDept" parameterType="integer" resultMap="deptResultMap" >
	select dept_id,dept_name,dept_address from dept where dept_id = #{deptId}
</select>

<!-- 根据部门地址查询多个部门信息 -->
<!-- 如果返回的是list，resultMap指定的值是list集合里元素的类型-->
<select id="selectList" parameterType="string" resultMap="deptResultMap" >
	select dept_id,dept_name,dept_address from dept where dept_address like #{deptAddress}
</select>


</mapper>
